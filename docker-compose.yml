version: '3.8'

services:
  tengen-api:
    build: 
      context: .
      target: production
    container_name: tengen-api
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_LEVEL=INFO
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
    volumes:
      - tengen_data:/app/data
      - tengen_logs:/app/logs
      - tengen_tmp:/tmp/tengen
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    user: "1000:1000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - tengen-network
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    container_name: tengen-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - tengen-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-tengen_redis_pass}
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # Optional: Nginx reverse proxy (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: tengen-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - tengen-api
  #   restart: unless-stopped
  #   networks:
  #     - tengen-network

networks:
  tengen-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  tengen_data:
    driver: local
  tengen_logs:
    driver: local
  tengen_tmp:
    driver: local
  redis_data:
    driver: local
